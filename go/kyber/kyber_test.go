package kyber

import (
	"crypto/rand"
	"encoding/hex"
	"testing"

	"github.com/cloudflare/circl/kem/kyber/kyber1024"
	"github.com/stretchr/testify/require"
)

func TestKyber1024(t *testing.T) {
	// Alice generates a public private key pair.
	// Alice sends her public key to Bob over an authenticated channel.
	alicePubKey, alicePrivKey, err := kyber1024.GenerateKeyPair(rand.Reader)
	require.NoError(t, err)

	// Bob then computes a sharedSecret which is contained in the ciphertext
	// which he then sends to Alice.
	ciphertext := make([]byte, kyber1024.CiphertextSize)
	sharedSecret := make([]byte, kyber1024.SharedKeySize)
	seed := make([]byte, kyber1024.EncapsulationSeedSize)
	_, err = rand.Read(seed)
	require.NoError(t, err)
	alicePubKey.EncapsulateTo(ciphertext, sharedSecret, seed)

	// Alice computes the shared secret from the ciphertext she receives from Bob.
	aliceSharedSecret := make([]byte, kyber1024.SharedKeySize)
	alicePrivKey.DecapsulateTo(aliceSharedSecret, ciphertext)

	require.Equal(t, aliceSharedSecret, sharedSecret)
}

func TestKyber1024Static(t *testing.T) {
	/*
		    alicePubKey, alicePrivKey, err := kyber1024.GenerateKeyPair(rand.Reader)
			require.NoError(t, err)

			alicePrivKeyBytes, err := alicePrivKey.MarshalBinary()
			require.NoError(t, err)

			alicePubKeyBytes, err := alicePubKey.MarshalBinary()
			require.NoError(t, err)

			t.Logf("alice private key: %x\n", alicePrivKeyBytes)
			t.Logf("alice public key: %x\n", alicePubKeyBytes)
	*/

	//alicePublicKeyBytes, err := hex.DecodeString("be52b87a921c52465a875393a1c536e6c188aefa7ed52717060747d0c8cad422a03470ab2294460dc8061ec41ad38b5ead4c9e50709b63f21ece5b9cc1035685b939a9da35fa2a936b5809b1a79b0977bc850311e6da981fc495c2e5a76fe07e31d0a26e64595070af49bb7447ba4183ebc68783015e7168fafa3c48ac5e064c1d2219283fe5cde3e4810c94ba6f765b4bf5ca48a2cf824cc8c21242efc1aad622bccc347b1f5024fd89216cbc97e19039ac823b9f5a1398cb810c4bb0acf7791282ba3e65901345b0c260318547235c46a7f6a15c6a661675659415ebb175771ce48569658a2191f41963dc43337635b8bb699ea84a71537447c0c62b65677fe82716d4befdf940f742a068b4376449a47716adb228671e58b3b8bc53aef1862bd303db07c73f7bc8d3a6c3f1d1cc977356e47aa32db5c8d77a3de53ac2202787bdfa5e7bc6c46b03bb648a538adc183296b5f8863d698a7a9f03365b4c8d238693553456c5399358c86a295c2072b0a35265cc46a81a1db32c86a8736a30c803049bc0f4358422a1e12b00cbd322c242c51d6abbeee80f7569733ef1c3f4a3c14bfcc015207aae390602ca7ccbf58aa5293140996ece432db0024bf2cb3f7ec544fd33a791910d154442a5272f5cd235d8957b7563c5b908061c264b7e1a6ae3e21e07a9873aa747521bb354a4392643033efa0ec8234cff8c2ab9ba237a806fcda74e3a24be35865e155bb0436a691e4907ef391358d0af1d5665f5b994d825996fa212fbac3246d693c3721603077c25e961ab3b98071230acc7a8df3ac46ef1bf9a7870ba57b396ac1345f1c1c3683119b94539b91e12038359005e0a91a14af74db53aa9a09b714e743d86ecb886e43d76935117033fa3f81cd1b3299b689cd3d08f8547976a88206cf685adb88b93d22adfb84d4cd5505c330aca273517248fcce298b6f0cea657b6dcd6cbe08a5e44767d52c3be460767c723bd994172ae44792e27b17cfc2f30520da37524a5c43c5a041d84fa50e9c4752d652643ac2b0db31f04992621c1c3cdecc834b88b5c7b1f2d831a520185738c819543871c85551aa22f367b7e28760a49a219c505026bd269304a12a6113e35e4585efa942d6374661c35bb24ac0863877b0461e3a49b4d864681932ef959371ed3be13b74a063ca848994729b5a88678086a423ba9815003757d31d97b26840529052226d93390d7b16cbb1cef4c652d8416648c1bc68c2d559bb5bca772f1a26188c038bce87a5168a3f9f7c9272216add134a8dbc3ef955481f89123b0bbf3f1ba287b8b80024edf019bfb46b38d04a6ec62b4de9b38fd8c166f5c34bd2a38c50a506d890d2cc7a9f1141b8811c952f66a92222ca01711b5302d7dc068d0a70d6533154d85aa3a4371f60745d8f33cb75b08b2711643968bab8b17bcd577cfec1d64d63267c3c561986db4b7a393cc74675cbe30533939663b91562871b2a474734c3345c2f8605af49b1618b69d9000aac0a71fcf1a1f7cf63da0b6058e52cb2bd2986d946485cbac55f63e12c87a51e36c18805273c2387c92ad14d21f5b0b2f22da7b33382d1b4a5ff21834bde76eb7a73e47290db01b754e49084d8b5481c5860d25ca00707b35c5544d239503897dd417b9ed50556cd9247d9c5663b03f7751ae61a50cfa4b3305496eb48a55e643254af923ffe73374871f4cec5ef906d0cc160ad2b307c2a6ba819ccc142541d9476b31e351165206384381ca7c36cc21a86d150f0e24a678242599eb3e05880477c85626c3057f4434830b9c46e27664592fc4ca28bea8b9a4c6942b53b7e6e1c0f09c167d3abcb0c741de7c601df45192b536cdb1345d702b77a3c4db036ae3511846d11c94e891118695571647390baf830301dee63ab425a8ef41c09efc22b8c59704a4498ec61062e4318f01420b990798193a6a811bf2d45561111ddb9204ee47668b5781f8e4346da9cf2392a9b9c89e8dc179609a986b38012fc44186237ec52c952ea98c6799091aab2904024c71cb3ea7e37c179b426194cc5c129c77314d16f5b6b3090cf6208d6af51ce7d0b00a4ac0c60002489268a033505417c8aff0ac853b7fd7b263cbc329db24969c66711edb62693c0bb767bd653933df8a67a2a740e103305bc2c2c5a9b720158f540ecec8a195f192a73abee00cf4bf19aac3945d3fa9bb674926c7c57ff66fc3")
	//require.NoError(t, err)
	alicePrivateKeyBytes, err := hex.DecodeString("84f08c79b2289a19618705b3ace41cccbb036ea853354a588170171b07b388438af052526c43a53dacb7070288aba368d653800ed8a0a288984e8506f797bf9fa2805c0bc2931b49898874e2b001096c666b57391a924892d9360ea25d53272877051179c4981c765f82b37b09c9bc3213126790aee3e0c60501a698ba1044aa5b54c4cade8481b3ac549b7a27ed21b702518125980a426b30f7b04e67527d46523e15f1978f63179bc24b5c52b3e194cab23812318212867b93c1a9c93ae734bd5c0d1a3c505c9bce4bb68ba8fb5c8d90c1191bac38e04113e0958a29af9be28dd0041f64ca434077908cd93519e76de3a0bb85a8c581049593545bf5d951e54096f749288c6aac4262ace2363443dab511806ad688c500e386fc373d8a0961f88ab07d5c525779b0d9178dee97570f03be22e83a66188a4f44c66ac083ba480dd44976451c8682442fd073139b118ce1f93935d91125053ef9e61048e42042369365f77be46440db5ac73475548c74b96c160829b43cfbc2114fdaabddea3a32bca185daced8b685fd432a96e59fce1a4ed03ca6dda6bc6f18bbe9193a6b2663fb4a22c033ca71090adc106c6c447daa585f2872794d89c0d74914df9a5fba728cef8c3046b30f55f628cd086b4a46c3ad950cbb9a65eb9610264c1d1d84ac2d80a5aad97393a773c13345a5e3cd3a84b31edb49281155adc8c67320a8941206d725c04098b17376c77a6acadff02c1a086debb00390dbae5b712a4ec139e22486ba8274be4b172ce7c8310853b0059320bb56c999bd83f398ecf968e37127bc9b29359789428bad52a61c5f36c714acad38729d60c4341aa27dcc9489ba444b23e3b97de82afdc99228f019905a751ef20ae2ac91ae4558e6f9789fc76dbfba81083c300e624e5438c860689a83b0b697062ab39866df3049740639d0d70cc66c413452b507a8afe2ba9954bb5fb63bc37583aaa86176ee6a4cada294cba3123026870949493e8bb62cfb0ae3b21c56a035301564158605401a8ca757cfc5e9622a740a04e07a0b442752697c84d43b53b7484125150eb9a91886772ae49aff0c0851f9baeb20640db592ad004fa2c03a7a256b90243f9aa43ffec77dfe2a1aa127b01f5570207802825268bee44dd199c040fc8d5025891ba042445868002cca1350033a624e6ac9a8c3dca4b786c0a92a111aa69d4e15bb6ee9310831c043a3ced4f99a6f908244a59a00fb3d5e853883222f290520bf3041cf1c4b11a16cb5ca3712e96eb5f24ad12ac9a295970ff6575de05aa6c54d7428032de4653d0a144672ad1f6051e161bf8e334ce1e263bc2c693d3bb5b5298f4885293343c970e10e9896b4c2a279f531ca24a86178201caec69d9f8151e3058cfcab75cf8166ee35cbf752017ca088994bcf7d8c4a1a4591866b9cf5d33d8600178717309c6b1e191c2572741541b81ac2d47775325c93c72f366b67208450119a6a7ee2bbe2572d9bbbab1265bc3c2521206451d5422b1c85580ec31c4eda57e73806b4307f27863359435ef067aa3b7463e0ba255c960450abc4ea2975c7b80b47d71441c74d1432b0bf283e845290d2632a4664aff8d473d8aa4ed61667c1b70c9e82b00167c339051f38683ba890090959cc2de1ce0828af8312895662868b47aec1702ae4aa4b12736500e31b3bb83f24490fe91cae88e5c03424b1e85383dca62c2df3ab838102c1d2b493d751df249c6aa14bc9f66467530406061520b561c823b2bb91bc6be20c551989b9fc2830075c68b25f09c0540d6a753453123bc6c0ae088c96e24c95588086d895eb313031526795949cb2c7a4f5918bae566387d486944708de46b646e4bd195394e66645bb075fe9c83528731c5f1b78ee7cbf692ba77db876e04b626624aef6424b63c0a5ba07be004507564a5b39b599110266b945b3c39928b81668a6616ded1b9825795b7ac74974355359863d0c0c29eba1cce5d66b9554b2ba259889d56cb1b0119cf10350836a62800c81b2441d0b297b155f599a417f37a723137db20b158f6bcf07c924bdc8bca2cbae7c631f4b456f732325ea2636f76046f37ca591eb78998939efc872ec73574c088767496fd1fa7fc159705a3c7c8d1a15bd6152b8d73cd65a41250c393da80c9f20097c6256043c1cbe52b87a921c52465a875393a1c536e6c188aefa7ed52717060747d0c8cad422a03470ab2294460dc8061ec41ad38b5ead4c9e50709b63f21ece5b9cc1035685b939a9da35fa2a936b5809b1a79b0977bc850311e6da981fc495c2e5a76fe07e31d0a26e64595070af49bb7447ba4183ebc68783015e7168fafa3c48ac5e064c1d2219283fe5cde3e4810c94ba6f765b4bf5ca48a2cf824cc8c21242efc1aad622bccc347b1f5024fd89216cbc97e19039ac823b9f5a1398cb810c4bb0acf7791282ba3e65901345b0c260318547235c46a7f6a15c6a661675659415ebb175771ce48569658a2191f41963dc43337635b8bb699ea84a71537447c0c62b65677fe82716d4befdf940f742a068b4376449a47716adb228671e58b3b8bc53aef1862bd303db07c73f7bc8d3a6c3f1d1cc977356e47aa32db5c8d77a3de53ac2202787bdfa5e7bc6c46b03bb648a538adc183296b5f8863d698a7a9f03365b4c8d238693553456c5399358c86a295c2072b0a35265cc46a81a1db32c86a8736a30c803049bc0f4358422a1e12b00cbd322c242c51d6abbeee80f7569733ef1c3f4a3c14bfcc015207aae390602ca7ccbf58aa5293140996ece432db0024bf2cb3f7ec544fd33a791910d154442a5272f5cd235d8957b7563c5b908061c264b7e1a6ae3e21e07a9873aa747521bb354a4392643033efa0ec8234cff8c2ab9ba237a806fcda74e3a24be35865e155bb0436a691e4907ef391358d0af1d5665f5b994d825996fa212fbac3246d693c3721603077c25e961ab3b98071230acc7a8df3ac46ef1bf9a7870ba57b396ac1345f1c1c3683119b94539b91e12038359005e0a91a14af74db53aa9a09b714e743d86ecb886e43d76935117033fa3f81cd1b3299b689cd3d08f8547976a88206cf685adb88b93d22adfb84d4cd5505c330aca273517248fcce298b6f0cea657b6dcd6cbe08a5e44767d52c3be460767c723bd994172ae44792e27b17cfc2f30520da37524a5c43c5a041d84fa50e9c4752d652643ac2b0db31f04992621c1c3cdecc834b88b5c7b1f2d831a520185738c819543871c85551aa22f367b7e28760a49a219c505026bd269304a12a6113e35e4585efa942d6374661c35bb24ac0863877b0461e3a49b4d864681932ef959371ed3be13b74a063ca848994729b5a88678086a423ba9815003757d31d97b26840529052226d93390d7b16cbb1cef4c652d8416648c1bc68c2d559bb5bca772f1a26188c038bce87a5168a3f9f7c9272216add134a8dbc3ef955481f89123b0bbf3f1ba287b8b80024edf019bfb46b38d04a6ec62b4de9b38fd8c166f5c34bd2a38c50a506d890d2cc7a9f1141b8811c952f66a92222ca01711b5302d7dc068d0a70d6533154d85aa3a4371f60745d8f33cb75b08b2711643968bab8b17bcd577cfec1d64d63267c3c561986db4b7a393cc74675cbe30533939663b91562871b2a474734c3345c2f8605af49b1618b69d9000aac0a71fcf1a1f7cf63da0b6058e52cb2bd2986d946485cbac55f63e12c87a51e36c18805273c2387c92ad14d21f5b0b2f22da7b33382d1b4a5ff21834bde76eb7a73e47290db01b754e49084d8b5481c5860d25ca00707b35c5544d239503897dd417b9ed50556cd9247d9c5663b03f7751ae61a50cfa4b3305496eb48a55e643254af923ffe73374871f4cec5ef906d0cc160ad2b307c2a6ba819ccc142541d9476b31e351165206384381ca7c36cc21a86d150f0e24a678242599eb3e05880477c85626c3057f4434830b9c46e27664592fc4ca28bea8b9a4c6942b53b7e6e1c0f09c167d3abcb0c741de7c601df45192b536cdb1345d702b77a3c4db036ae3511846d11c94e891118695571647390baf830301dee63ab425a8ef41c09efc22b8c59704a4498ec61062e4318f01420b990798193a6a811bf2d45561111ddb9204ee47668b5781f8e4346da9cf2392a9b9c89e8dc179609a986b38012fc44186237ec52c952ea98c6799091aab2904024c71cb3ea7e37c179b426194cc5c129c77314d16f5b6b3090cf6208d6af51ce7d0b00a4ac0c60002489268a033505417c8aff0ac853b7fd7b263cbc329db24969c66711edb62693c0bb767bd653933df8a67a2a740e103305bc2c2c5a9b720158f540ecec8a195f192a73abee00cf4bf19aac3945d3fa9bb674926c7c57ff66fc33512ebfa18885d39348ee46c9d4f4034a725b519ffe58c44caf035caffdc7750dc2cdae1637c36671b2c70ca5b6078d16cb71f167be873cf20d40f504525e4d8")
	require.NoError(t, err)

	scheme := kyber1024.Scheme()
	//alicePublicKey, err := scheme.UnmarshalBinaryPublicKey(alicePublicKeyBytes)
	//require.NoError(t, err)
	alicePrivateKeyVal, err := scheme.UnmarshalBinaryPrivateKey(alicePrivateKeyBytes)
	require.NoError(t, err)

	ciphertext, err := hex.DecodeString("d0b513f531e3747e1d249b7ca17b4d4ecf0051a1f21280bc8c839deef2e536636034b135f42cac9c16c2903e5401f8bee70b14c3aaf16e0ca5713dba694822f0d7c794e5f93cdb37cd6519fc9f348a0bd719a9ff828e5c7d59f78582e2e000db933ce902e91445f71af26648b08c9169c908ffada8c8ee0d7171ad81c5958602b0004a393f5947967fb62857cb7a5c2fda6bdeba27a0130abdab44146210322d82051e0decfe7f5e200dccd89fd68b35c9461fb0178d759989081593b42d6902890bb64fbb1eee357e83a330fe5913b7c5f712b652ba60b8db3886eb4eb888462cf376b9b8fa5c9fe05045c71144eb9c7396c7652c0df093e11621bcf88ac04632edff9a2512af8ea26932a9398b45827c480fa8910415980d5931b3ca090fd83b1978aef9c2d5e5d509ebc34c407f90d1d6f4407c4eab5db9d2538340edf4bc4aa3955785414477c4f53119d6401b927be3dc25c0dd5b795469d264a196b0096acdbe6179e087ab305e73b847adfc75756e5ac341f1c9f3f870c22f44193d47948adae8806ec6a79cc3873a204db836605b1a0abd38ab42582c931dbae07336e25868db29e103c21cac3da66523af3b64d23d0907fbfb3d09f5ad57368102bf530933107b404025ca866f38f37840ab5fc591e5975ffb695bca7d559ea709bdf9e4a0bc4419c00cd2a3088f98af62dee571e8f37b5482fc1e55485ac2541d3abed05b105c1c051391fde32bca22c9822afbb8372381baa3fdc5fc0a9331445b239091b6aee14fb3b440ce07b2c8d0ef521428bc032ad80a23340cc8a7903dc67b51d0633c000f476bc8ca382037480def7dc4d3d2a58f196deb3af6df3e8eadb317de4b6de71ee610e95826ecd10dcd178d9f4b130507dd8257ea0895bd31fd97926cfeac2a42aea1525934ae187ed6e8d5cd6b38bf7578976167efdac5fd8242fb02cdde304d4470b8d900765da09b41c2ffe9d4b33847398d5149c018ffe5fb5bf97cd2997463a7f7507b04e47455d1e87fa304eaebba4ce362141d39a911357b5b4c942e91dccc7fcd91d61d17883aae4673eed2483b14517718c67627ca5c2451ba51d30280db15393b0af83f6ab59f53d19eb5e6b9cc3f9abfa52b30fb9c6473b237a14610227d12c7dfba4a01efc5b1748be388497c215fbb0618f232bbd8d0c4bf8d2570c324bbf6d01af77d06cfbe1941809a66e4c40bb362942cfca0a362147ce84e20832f2d66cb9894cf9548fdef75461aa7e40068b8a25e66d0cee75481fa0d905d2b59b675a22513cca527b700310dc9a667dab2f107777f2fe970752b2484fe7ac1f3b93fc078283323ab9ff86f3787400e30a5a4aad6aa6d32bf9036e7ce3cf2bd355ee249dad746e0db075c8ca83e7f8440763061682fd4e1c6deafb03de43a5d6a426a0b505c2c18c56bff0928b460e042971a6ef8c8881d2c6217786a637e4206dfb5c6b64d08d24a2848dcad258db59126cae4b304d6e6275996d0b3c0808c0689cc5f13c4900e1dceb064939975fdb8af2b56707ad98bf6752341af45f03775d8d9f8f3fcf43c2fa7b9ee4ee0385da21e6174314caade4cee5b6ee3013d165b40ccccea4e03bc121f06d90e2f1bdd8f9ebb1ba61e399433bae706a85d68b4f1edad7d9bcf07c14fa7f6a0a8e7b037f69f15da9a153f57935b0777aac5d4d37e3e56ec1176ae2c46355c69f469651693044b81819b360a6f7e5911d1b666dcc90e99c619e5eb5cadf6c875b2b07c9714ad46e498f8248526fd852bdeb5119bb383a03fc6824b7007a0773b41af3ef2c8791bd00b8781a162df7f4885d02d1a36c7c45568b2682c618812982e34d5c7e85333024257a28fbb41cdf054d77494a4f537e01517a0d4ff6a33aa52390166f9ed67f2cf55d6601fa1ad99c5d164a9af1676637d14cc40de37a48cfe2697b802c3bd43f7b560153d00723029fbf76ec747c00ec26b774fc0692c21ed0b25f100fa65e36f3d235fbd63c1ee0be341a283f86333f63455f449f3898fe0bcd72de4329c613b665d227c570592cc9a13d0e90fd3fa97064359195658cc26aac06a80e5573023e039e3b6620d692a4a21a53b46c749a258d2bbdc1d0cbb758625e7de7e1d48c0e05cd4ed77276509db6f9e3ed825ceb2cce8ae442e23339e25b6b22cc705e0055c2b46ca5bbd403b899cff0148a2f146774d93f9c737188509390a50c7b348911692")
	require.NoError(t, err)

	aliceSharedSecret := make([]byte, kyber1024.SharedKeySize)
	alicePrivateKey := alicePrivateKeyVal.(*kyber1024.PrivateKey)
	alicePrivateKey.DecapsulateTo(aliceSharedSecret, ciphertext)

	bobSharedSecret, err := hex.DecodeString("33d57794c33df1d0bf835ea2980e53c3ae2849b0ab6639e449e82c711beab2cf")
	require.NoError(t, err)

	require.Equal(t, aliceSharedSecret, bobSharedSecret)
}
